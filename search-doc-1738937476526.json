[{"title":"Processor","type":0,"sectionRef":"#","url":"/ScoreSync/api/Processor","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Processor","url":"/ScoreSync/api/Processor#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Processor","url":"/ScoreSync/api/Processor#new","content":"&lt;/&gt; Processor.new( Callback: (Event: Types.Process) → boolean, Config: { Size: number?, Delay: number? }? ) → Processor Creates a new Processor object. Callback ((Event: Types.Process) -&gt; boolean): The callback function to process the events. Config (table, optional): The configuration for the Processor. Size (number, optional): The number of requests to process at once. Defaults to 20 Delay (number, optional): The delay between each batch. Defaults to 30 The Processor object processes events in a queue, in a batch like manor, with a delay between each batch. The Processor object will attempt to process all events in the queue, in the event of a server shutdown. "},{"title":"ScoreSync","type":0,"sectionRef":"#","url":"/ScoreSync/api/ScoreSync","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"ScoreSync","url":"/ScoreSync/api/ScoreSync#types","content":" "},{"title":"Result​","type":1,"pageTitle":"ScoreSync","url":"/ScoreSync/api/ScoreSync#Result","content":"&lt;/&gt; type Result = ( key: string, value: number ) An object containing the key and value of a score. "},{"title":"Properties​","type":1,"pageTitle":"ScoreSync","url":"/ScoreSync/api/ScoreSync#properties","content":" "},{"title":"Updated​","type":1,"pageTitle":"ScoreSync","url":"/ScoreSync/api/ScoreSync#Updated","content":"&lt;/&gt; ScoreSync.Updated: Signal  "},{"title":"Functions​","type":1,"pageTitle":"ScoreSync","url":"/ScoreSync/api/ScoreSync#functions","content":" "},{"title":"new​","type":1,"pageTitle":"ScoreSync","url":"/ScoreSync/api/ScoreSync#new","content":"&lt;/&gt; ScoreSync.new(Config: { Name: string, UTC: number?, Type: (&quot;Highest&quot; | &quot;Lowest&quot;)?, Cycle: (&quot;All-Time&quot; | &quot;Yearly&quot; | &quot;Quarterly&quot; | &quot;Monthly&quot; | &quot;Daily&quot; | &quot;Hourly&quot;)?, CycleDay: ( &quot;Saturday&quot;, &quot;Sunday&quot;, &quot;Monday&quot;, &quot;Tuesday&quot;, &quot;Wednesday&quot;, &quot;Thursday&quot;, &quot;Friday&quot; )?, Refresh: number?, Version: number?, BatchOverrides: { Size: number?, Delay: number? }? }) → ScoreSync Creates a new ScoreSync object. Name (string): The name of the leaderboard. UTC (number, optional): The UTC offset for the leaderboard. Defaults to 0. (Note this is in hours) Type (string, optional): The type of leaderboard (Highest or Lowest). Defaults to 'Highest'. Cycle (string, optional): The cycle of the leaderboard, Options: ('All-Time', 'Yearly', 'Quarterly', 'Monthly', 'Weekly', 'Daily', 'Hourly'). Defaults to 'All-Time'. CycleDay (string, optional): The day of the week to reset the leaderboard. Defaults to 'Friday'. Refresh (number, optional): The refresh rate of the leaderboard. Defaults to 60. Version (number, optional): The version of the leaderboard. Defaults to 1. BatchOverrides (table, optional): The batch overrides for the Processor. Size (number, optional): The number of requests to process at once. Defaults to 20 Delay (number, optional): The delay between each batch. Defaults to 30   "},{"title":"TimeUntilReset​","type":1,"pageTitle":"ScoreSync","url":"/ScoreSync/api/ScoreSync#TimeUntilReset","content":"&lt;/&gt; ScoreSync:TimeUntilReset(AsString: boolean?) → number | string   "},{"title":"IncrementAsync​","type":1,"pageTitle":"ScoreSync","url":"/ScoreSync/api/ScoreSync#IncrementAsync","content":"&lt;/&gt; ScoreSync:IncrementAsync( Player: Player , Amount: number? ) → Promise&lt;boolean&gt;   "},{"title":"SetAsync​","type":1,"pageTitle":"ScoreSync","url":"/ScoreSync/api/ScoreSync#SetAsync","content":"&lt;/&gt; ScoreSync:SetAsync( Player: Player , Amount: number ) → Promise&lt;boolean&gt;   "},{"title":"GetOrderedListAsync​","type":1,"pageTitle":"ScoreSync","url":"/ScoreSync/api/ScoreSync#GetOrderedListAsync","content":"&lt;/&gt; ScoreSync:GetOrderedListAsync( Count: number?, Min: number?, Max: number? ) → Promise&lt;{Result}&gt;  "}]